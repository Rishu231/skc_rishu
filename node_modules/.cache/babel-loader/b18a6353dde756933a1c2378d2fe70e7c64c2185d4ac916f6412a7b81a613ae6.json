{"ast":null,"code":"var _jsxFileName = \"/Users/rishuraj/Documents/learning-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const messagesEndRef = useRef(null);\n\n  // Automatically scrolls to the bottom when a new message is added\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n\n  // Function to convert text with bullet points into HTML lists\n  const formatMessage = message => {\n    const lines = message.split('\\n');\n    const formattedLines = [];\n    let currentList = [];\n    lines.forEach(line => {\n      if (line.trim().startsWith('*') || line.trim().startsWith('-')) {\n        // If line starts with * or -, treat it as a bullet point\n        if (currentList.length === 0) {\n          formattedLines.push(/*#__PURE__*/_jsxDEV(\"ul\", {}, formattedLines.length, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 31\n          }, this));\n        }\n        currentList.push(/*#__PURE__*/_jsxDEV(\"li\", {\n          children: line.substring(2).trim()\n        }, currentList.length, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 26\n        }, this));\n      } else {\n        // If it's regular text, just add as paragraph\n        if (currentList.length > 0) {\n          formattedLines.push(...currentList);\n          currentList = [];\n        }\n        formattedLines.push(/*#__PURE__*/_jsxDEV(\"p\", {\n          children: line\n        }, formattedLines.length, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this));\n      }\n    });\n    if (currentList.length > 0) {\n      formattedLines.push(...currentList); // In case the last part is a list\n    }\n    return formattedLines;\n  };\n  const sendMessage = async () => {\n    if (!userInput) return;\n    setMessages(prevMessages => [...prevMessages, {\n      text: userInput,\n      isBot: false\n    }]);\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/ai/res/?question=${encodeURIComponent(userInput)}`, {\n        method: 'GET'\n      });\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status} ${response.statusText}`);\n      }\n      const data = await response.json();\n      const botMessage = data.result;\n\n      // Format the bot's response before displaying it\n      const formattedMessage = formatMessage(botMessage);\n      setMessages(prevMessages => [...prevMessages, {\n        text: formattedMessage,\n        isBot: true\n      }]);\n      setUserInput('');\n    } catch (error) {\n      console.error('Error:', error);\n      setError(`Something went wrong: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Python Tutor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"messages\",\n        className: \"messages\",\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.isBot ? 'bot' : 'user'}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-text\",\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"user_input\",\n          value: userInput,\n          onChange: e => setUserInput(e.target.value),\n          placeholder: \"Ask a Python question...\",\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          disabled: loading,\n          className: \"send-button\",\n          children: loading ? 'Loading...' : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AEerGb3mtpXKW36/M5pc9LPgcoM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","userInput","setUserInput","messages","setMessages","loading","setLoading","error","setError","messagesEndRef","current","scrollIntoView","behavior","formatMessage","message","lines","split","formattedLines","currentList","forEach","line","trim","startsWith","length","push","fileName","_jsxFileName","lineNumber","columnNumber","children","substring","sendMessage","prevMessages","text","isBot","response","fetch","encodeURIComponent","method","ok","Error","status","statusText","data","json","botMessage","result","formattedMessage","console","className","id","map","msg","index","ref","type","value","onChange","e","target","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/rishuraj/Documents/learning-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const messagesEndRef = useRef(null);\n\n  // Automatically scrolls to the bottom when a new message is added\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [messages]);\n\n  // Function to convert text with bullet points into HTML lists\n  const formatMessage = (message) => {\n    const lines = message.split('\\n');\n    const formattedLines = [];\n    let currentList = [];\n\n    lines.forEach((line) => {\n      if (line.trim().startsWith('*') || line.trim().startsWith('-')) {\n        // If line starts with * or -, treat it as a bullet point\n        if (currentList.length === 0) {\n          formattedLines.push(<ul key={formattedLines.length} />);\n        }\n        currentList.push(<li key={currentList.length}>{line.substring(2).trim()}</li>);\n      } else {\n        // If it's regular text, just add as paragraph\n        if (currentList.length > 0) {\n          formattedLines.push(...currentList);\n          currentList = [];\n        }\n        formattedLines.push(<p key={formattedLines.length}>{line}</p>);\n      }\n    });\n\n    if (currentList.length > 0) {\n      formattedLines.push(...currentList); // In case the last part is a list\n    }\n\n    return formattedLines;\n  };\n\n  const sendMessage = async () => {\n    if (!userInput) return;\n\n    setMessages(prevMessages => [\n      ...prevMessages,\n      { text: userInput, isBot: false },\n    ]);\n    setLoading(true);\n    setError('');\n\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/ai/res/?question=${encodeURIComponent(userInput)}`, {\n        method: 'GET',\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status} ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      const botMessage = data.result;\n\n      // Format the bot's response before displaying it\n      const formattedMessage = formatMessage(botMessage);\n\n      setMessages(prevMessages => [\n        ...prevMessages,\n        { text: formattedMessage, isBot: true },\n      ]);\n      setUserInput('');\n    } catch (error) {\n      console.error('Error:', error);\n      setError(`Something went wrong: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-box\">\n        <h2>Python Tutor</h2>\n        <div id=\"messages\" className=\"messages\">\n          {messages.map((msg, index) => (\n            <div key={index} className={`message ${msg.isBot ? 'bot' : 'user'}`}>\n              <span className=\"message-text\">{msg.text}</span>\n            </div>\n          ))}\n          <div ref={messagesEndRef} />\n        </div>\n        {error && <div className=\"error\">{error}</div>}\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            id=\"user_input\"\n            value={userInput}\n            onChange={(e) => setUserInput(e.target.value)}\n            placeholder=\"Ask a Python question...\"\n            disabled={loading}\n          />\n          <button onClick={sendMessage} disabled={loading} className=\"send-button\">\n            {loading ? 'Loading...' : 'Send'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}