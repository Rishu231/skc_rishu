{"ast":null,"code":"var _jsxFileName = \"/Users/rishuraj/skc_rishu/src/pages/VoiceChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Header from \"../component/Header\";\nimport Footer from \"../component/Footer\";\nimport Body from \"../component/Body\";\nimport ApiCall from \"../component/ApiCall\";\nimport \"../styles/vchat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VoiceChat() {\n  _s();\n  const [listening, setListening] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [error, setError] = useState(\"\");\n  const recognitionRef = useRef(null);\n  useEffect(() => {\n    if (\"webkitSpeechRecognition\" in window) {\n      recognitionRef.current = new window.webkitSpeechRecognition();\n      recognitionRef.current.continuous = false;\n      recognitionRef.current.interimResults = false;\n      recognitionRef.current.lang = \"en-US\";\n      recognitionRef.current.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        sendMessage(transcript);\n      };\n      recognitionRef.current.onerror = event => {\n        console.error(\"Speech recognition error:\", event.error);\n        setError(\"Speech recognition error. Please try again.\");\n      };\n    } else {\n      setError(\"Speech recognition not supported in this browser.\");\n    }\n  }, []);\n  const startListening = () => {\n    if (recognitionRef.current) {\n      setListening(true);\n      setError(\"\");\n      recognitionRef.current.start();\n    }\n  };\n  const stopListening = () => {\n    if (recognitionRef.current) {\n      setListening(false);\n      recognitionRef.current.stop();\n    }\n  };\n  const sendMessage = async text => {\n    setListening(false);\n    setMessages(prevMessages => [...prevMessages, {\n      text,\n      isBot: false\n    }]);\n    setError(\"\");\n    try {\n      const botMessage = await ApiCall(text); // API call is now abstracted to a component\n      setMessages(prevMessages => [...prevMessages, {\n        text: botMessage,\n        isBot: true\n      }]);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setError(`Something went wrong: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Body, {\n        messages: messages,\n        error: error,\n        listening: listening\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        listening: listening,\n        startListening: startListening,\n        stopListening: stopListening\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(VoiceChat, \"CurP/VsZBwT0KPezEf1JrkIjSzI=\");\n_c = VoiceChat;\nexport default VoiceChat;\nvar _c;\n$RefreshReg$(_c, \"VoiceChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Header","Footer","Body","ApiCall","jsxDEV","_jsxDEV","VoiceChat","_s","listening","setListening","messages","setMessages","error","setError","recognitionRef","window","current","webkitSpeechRecognition","continuous","interimResults","lang","onresult","event","transcript","results","sendMessage","onerror","console","startListening","start","stopListening","stop","text","prevMessages","isBot","botMessage","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rishuraj/skc_rishu/src/pages/VoiceChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Header from \"../component/Header\";\nimport Footer from \"../component/Footer\";\nimport Body from \"../component/Body\";\nimport ApiCall from \"../component/ApiCall\";\nimport \"../styles/vchat.css\";\n\nfunction VoiceChat() {\n  const [listening, setListening] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [error, setError] = useState(\"\");\n  const recognitionRef = useRef(null);\n\n  useEffect(() => {\n    if (\"webkitSpeechRecognition\" in window) {\n      recognitionRef.current = new window.webkitSpeechRecognition();\n      recognitionRef.current.continuous = false;\n      recognitionRef.current.interimResults = false;\n      recognitionRef.current.lang = \"en-US\";\n\n      recognitionRef.current.onresult = (event) => {\n        const transcript = event.results[0][0].transcript;\n        sendMessage(transcript);\n      };\n\n      recognitionRef.current.onerror = (event) => {\n        console.error(\"Speech recognition error:\", event.error);\n        setError(\"Speech recognition error. Please try again.\");\n      };\n    } else {\n      setError(\"Speech recognition not supported in this browser.\");\n    }\n  }, []);\n\n  const startListening = () => {\n    if (recognitionRef.current) {\n      setListening(true);\n      setError(\"\");\n      recognitionRef.current.start();\n    }\n  };\n\n  const stopListening = () => {\n    if (recognitionRef.current) {\n      setListening(false);\n      recognitionRef.current.stop();\n    }\n  };\n\n  const sendMessage = async (text) => {\n    setListening(false);\n    setMessages((prevMessages) => [...prevMessages, { text, isBot: false }]);\n    setError(\"\");\n\n    try {\n      const botMessage = await ApiCall(text); // API call is now abstracted to a component\n      setMessages((prevMessages) => [...prevMessages, { text: botMessage, isBot: true }]);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setError(`Something went wrong: ${error.message}`);\n    }\n  };\n\n  return (\n    <div className=\"container-screen\">\n      <div className=\"chat-box\">\n        <Header />\n        <Body messages={messages} error={error} listening={listening} />\n        <Footer\n          listening={listening}\n          startListening={startListening}\n          stopListening={stopListening}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default VoiceChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}