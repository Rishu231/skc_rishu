{"ast":null,"code":"var _jsxFileName = \"/Users/rishuraj/Documents/learning-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const messagesEndRef = useRef(null); // Reference for the bottom of the messages container\n\n  // Function to automatically scroll to the bottom when a new message is added\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]); // Runs every time messages are updated\n\n  const sendMessage = async () => {\n    if (!userInput) return;\n\n    // Add the user message to the chat\n    setMessages(prevMessages => [...prevMessages, {\n      text: userInput,\n      isBot: false\n    }]);\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/ai/res/?question=${encodeURIComponent(userInput)}`, {\n        method: 'GET'\n      });\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status} ${response.statusText}`);\n      }\n      const data = await response.json();\n      const botMessage = data.result;\n      setMessages(prevMessages => [...prevMessages, {\n        text: botMessage,\n        isBot: true\n      }]);\n      setUserInput('');\n    } catch (error) {\n      console.error('Error:', error);\n      setError(`Something went wrong: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Python Tutor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"messages\",\n        className: \"messages\",\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.isBot ? 'bot' : 'user'}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-text\",\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"user_input\",\n          value: userInput,\n          onChange: e => setUserInput(e.target.value),\n          placeholder: \"Ask a Python question...\",\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          disabled: loading,\n          className: \"send-button\",\n          children: loading ? 'Loading...' : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AEerGb3mtpXKW36/M5pc9LPgcoM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","userInput","setUserInput","messages","setMessages","loading","setLoading","error","setError","messagesEndRef","current","scrollIntoView","behavior","sendMessage","prevMessages","text","isBot","response","fetch","encodeURIComponent","method","ok","Error","status","statusText","data","json","botMessage","result","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","map","msg","index","ref","type","value","onChange","e","target","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/rishuraj/Documents/learning-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const messagesEndRef = useRef(null); // Reference for the bottom of the messages container\n\n  // Function to automatically scroll to the bottom when a new message is added\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [messages]); // Runs every time messages are updated\n\n  const sendMessage = async () => {\n    if (!userInput) return;\n\n    // Add the user message to the chat\n    setMessages(prevMessages => [\n      ...prevMessages,\n      { text: userInput, isBot: false },\n    ]);\n    setLoading(true);\n    setError('');\n\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/ai/res/?question=${encodeURIComponent(userInput)}`, {\n        method: 'GET',\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error: ${response.status} ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      const botMessage = data.result;\n\n      setMessages(prevMessages => [\n        ...prevMessages,\n        { text: botMessage, isBot: true },\n      ]);\n      setUserInput('');\n    } catch (error) {\n      console.error('Error:', error);\n      setError(`Something went wrong: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-box\">\n        <h2>Python Tutor</h2>\n        <div id=\"messages\" className=\"messages\">\n          {messages.map((msg, index) => (\n            <div key={index} className={`message ${msg.isBot ? 'bot' : 'user'}`}>\n              <span className=\"message-text\">{msg.text}</span>\n            </div>\n          ))}\n          <div ref={messagesEndRef} />\n        </div>\n        {error && <div className=\"error\">{error}</div>}\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            id=\"user_input\"\n            value={userInput}\n            onChange={(e) => setUserInput(e.target.value)}\n            placeholder=\"Ask a Python question...\"\n            disabled={loading}\n          />\n          <button onClick={sendMessage} disabled={loading} className=\"send-button\">\n            {loading ? 'Loading...' : 'Send'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}